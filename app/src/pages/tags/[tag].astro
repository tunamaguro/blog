---
import type { GetStaticPaths } from "astro";
import { slugfy } from "@/utils/slugfy";

export const getStaticPaths = (async () => {
  const articles = await getArticles();

  const allTags = Array.from(
    new Set(
      articles.flatMap((article) =>
        article.data.tags.map((tag) => tag.toLowerCase())
      )
    )
  );

  return allTags.map((tag) => {
    const filteredPosts = articles
      .map((article) => ({
        ...article.data,
        slug: article.slug,
      }))
      .filter((article) =>
        article.tags
          .map((article_tag) => article_tag.toLowerCase())
          .includes(tag)
      )
      .sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1));

    return {
      params: {
        tag: slugfy(tag),
      },
      props: {
        tag,
        posts: filteredPosts,
      },
    };
  });
}) satisfies GetStaticPaths;

import BaseLayout from "@/layouts/BaseLayout.astro";
import { PostList } from "@/components/PostList";
import { PostListHeader } from "@/components/PostList/Header";
import { getArticles } from "@/utils/getArticles";
const { tag, posts } = Astro.props;
---

<BaseLayout>
  <PostList cards={posts}>
    <PostListHeader>
      {tag}
    </PostListHeader>
  </PostList>
</BaseLayout>
