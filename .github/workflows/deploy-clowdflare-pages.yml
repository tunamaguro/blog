name: Deploy Clowdflare Pages
on: [push]

permissions: 
  contents: read
  statuses: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    if: github.actor == github.repository_owner
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 9
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: app/pnpm-lock.yaml
      - name: Install Dependency
        run: pnpm install --frozen-lockfile

      - name: Astro Build
        run: pnpm run build

      - name: Deploy Cloudflare Pages
        id: cloudflare_pages_deploy
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ID }}
          projectName: blog
          directory: app/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Add publish URL as commit status
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              context: 'Cloudflare Pages',
              description: 'Cloudflare Pages deployment',
              state: 'success',
              sha,
              target_url: "${{ steps.cloudflare_pages_deploy.outputs.url }}",
            });